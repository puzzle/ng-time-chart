{"version":3,"file":"main.js","mappings":"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","sources":["./projects/ng-time-chart-showcase/src/app/app-routing.module.ts","./projects/ng-time-chart-showcase/src/app/app.component.ts","./projects/ng-time-chart-showcase/src/app/app.component.html","./projects/ng-time-chart-showcase/src/app/app.module.ts","./projects/ng-time-chart-showcase/src/environments/environment.ts","./projects/ng-time-chart-showcase/src/main.ts","./projects/ng-time-chart/src/lib/components/chart/ng-time-chart.component.ts","./projects/ng-time-chart/src/lib/components/chart/ng-time-chart.component.html","./projects/ng-time-chart/src/lib/components/item-grouping/item-grouping.component.ts","./projects/ng-time-chart/src/lib/components/item-grouping/item-grouping.component.html","./projects/ng-time-chart/src/lib/components/item/item.component.ts","./projects/ng-time-chart/src/lib/components/item/item.component.html","./projects/ng-time-chart/src/lib/components/ng-time-chart.module.ts","./projects/ng-time-chart/src/lib/components/time-table-body/time-table-body.component.ts","./projects/ng-time-chart/src/lib/components/time-table-body/time-table-body.component.html","./projects/ng-time-chart/src/lib/constants.ts","./projects/ng-time-chart/src/lib/group.ts","./projects/ng-time-chart/src/lib/layout/layout-selector.service.ts","./projects/ng-time-chart/src/lib/layout/layout-strategy.enum.ts","./projects/ng-time-chart/src/lib/layout/stacked-layout.service.ts","./projects/ng-time-chart/src/lib/layout/tiled-layout.service.ts","./projects/ng-time-chart/src/lib/period.ts","./projects/ng-time-chart/src/lib/pipes/time-chart-date-formatter.pipe.ts","./projects/ng-time-chart/src/lib/service/period.service.ts","./projects/ng-time-chart/src/lib/service/year.service.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import {Component} from '@angular/core';\nimport {Group} from '../../../ng-time-chart/src/lib/group';\nimport {LayoutStrategy} from '../../../ng-time-chart/src/lib/layout/layout-strategy.enum';\nimport { DateTime } from 'luxon';\nimport { Settings } from 'luxon';\n\n@Component({\n  selector: 'ng-tl-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\n\nexport class AppComponent {\n  readonly currentYear = DateTime.local().year;\n\n  title = 'NgTimeChartLibrary';\n\n  groups: Group[];\n  startDate = DateTime.fromISO(`${this.currentYear}-05-01`);\n  endDate = DateTime.fromISO(`${this.currentYear}-08-31`);\n  readonly tiledLayoutStrategy = LayoutStrategy.Tiled;\n  readonly stackedLayoutStrategy = LayoutStrategy.Stacked;\n\n  constructor() {\n    Settings.defaultLocale = 'de-ch';\n    this.groups = [\n      new Group(\n        'Testgroup 0',\n        [\n          {\n            name: 'Testitem 0',\n            startTime: DateTime.fromISO(`${this.currentYear}-02-12`),\n            endTime: DateTime.fromISO(`${this.currentYear}-03-23`),\n            class: 'type-b'\n          },\n          {\n            name: 'Testitem 1',\n            startTime: DateTime.fromISO(`${this.currentYear}-03-25`),\n            endTime: DateTime.fromISO(`${this.currentYear}-03-30T01:30`),\n            class: 'type-a',\n            details: 'More information of Testitem 1',\n            onClick: () => alert('I was clicked 😊')\n          },\n          {\n            name: 'Testitem 2',\n            startTime: DateTime.fromISO(`${this.currentYear}-04-01`),\n            endTime: DateTime.fromISO(`${this.currentYear}-04-07`),\n            class: 'type-b'\n          },\n          {\n            name: 'Testitem 3',\n            startTime: DateTime.fromISO(`${this.currentYear}-04-08`),\n            endTime: DateTime.fromISO(`${this.currentYear}-04-12`),\n            class: 'type-b'\n          },\n          {\n            name: 'Testitem 4',\n            startTime: DateTime.fromISO(`${this.currentYear}-04-02`),\n            endTime: DateTime.fromISO(`${this.currentYear}-04-05`),\n            class: 'type-b',\n            details: 'More information of Testitem 4. A lot of text to show how this is handled.'\n          }].sort((a, b) => a.startTime.diff(b.startTime).as('seconds')),\n        () => alert('Group clicked')\n      ),\n      new Group(\n        'Testgroup 1',\n        [\n          {\n            name: 'Testitem 0',\n            startTime: DateTime.fromISO(`${this.currentYear}-02-12`),\n            endTime: DateTime.fromISO(`${this.currentYear}-05-23`),\n            details: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.',\n            class: 'type-c'\n          },\n          {\n            name: 'Testitem 1',\n            startTime: DateTime.fromISO(`${this.currentYear}-04-11`),\n            endTime: DateTime.fromISO(`${this.currentYear}-04-28T00:30`),\n            details: 'Oh, there\\'s a monkey in my pocket, And he\\'s stealing all my change. His stare is blank and glassy, I suspect he\\'s deranged 🐒',\n            class: 'type-c',\n            dates: [\n              DateTime.fromISO(`${this.currentYear}-04-11`),\n              DateTime.fromISO(`${this.currentYear}-04-12`),\n              DateTime.fromISO(`${this.currentYear}-04-13`),\n              DateTime.fromISO(`${this.currentYear}-04-14`),\n              DateTime.fromISO(`${this.currentYear}-04-15`),\n              DateTime.fromISO(`${this.currentYear}-04-16`),\n              DateTime.fromISO(`${this.currentYear}-04-17`),\n              DateTime.fromISO(`${this.currentYear}-04-18`),\n              DateTime.fromISO(`${this.currentYear}-04-19`),\n              DateTime.fromISO(`${this.currentYear}-04-20`),\n              DateTime.fromISO(`${this.currentYear}-04-21`),\n              DateTime.fromISO(`${this.currentYear}-04-22`),\n              DateTime.fromISO(`${this.currentYear}-04-23`),\n              DateTime.fromISO(`${this.currentYear}-04-24`),\n              DateTime.fromISO(`${this.currentYear}-04-25`),\n              DateTime.fromISO(`${this.currentYear}-04-26`),\n              DateTime.fromISO(`${this.currentYear}-04-27`),\n              DateTime.fromISO(`${this.currentYear}-04-28`)\n            ]\n          },\n          {\n            name: 'Testitem 2',\n            startTime: DateTime.fromISO(`${this.currentYear}-10-08T22:00`),\n            endTime: DateTime.fromISO(`${this.currentYear}-10-10T04:30`),\n            class: 'type-b',\n            dates: [\n              DateTime.fromISO(`${this.currentYear}-10-08`),\n              DateTime.fromISO(`${this.currentYear}-10-09`),\n              DateTime.fromISO(`${this.currentYear}-10-10`)\n            ]\n          },\n          {\n            name: 'Testitem 3',\n            startTime: DateTime.fromISO(`${this.currentYear}-10-11T00:01`),\n            endTime: DateTime.fromISO(`${this.currentYear}-10-12T05:00`),\n            class: 'type-b',\n            dates: [\n              DateTime.fromISO(`${this.currentYear}-10-11`),\n              DateTime.fromISO(`${this.currentYear}-10-12`)\n            ]\n          },].sort((a, b) => a.startTime.diff(b.startTime).as('seconds')),\n        () => console.log('clicked')\n      ),\n      new Group(\n        'Testgroup 2',\n        [\n          {\n            name: 'Testitem 0',\n            startTime: DateTime.fromISO(`${this.currentYear}-06-12T08:23`),\n            endTime: DateTime.fromISO(`${this.currentYear}-07-01T06:23`)\n          },\n          {\n            name: 'Testitem 1',\n            startTime: DateTime.fromISO(`${this.currentYear - 1}-08-11`),\n            endTime: DateTime.fromISO(`${this.currentYear}-09-02`)\n          },\n          {\n            name: 'Testitem 3',\n            startTime: DateTime.fromISO(`${this.currentYear}-07-01T08:23`),\n            endTime: DateTime.fromISO(`${this.currentYear}-07-12T23:23`)\n          },].sort((a, b) => a.startTime.diff(b.startTime).as('seconds')),\n        () => console.log('clicked')\n      ),\n      new Group(\n        'Testgroup 3',\n        [\n          {\n            name: 'Testitem 0',\n            startTime: DateTime.fromISO(`${this.currentYear}-09-12`),\n            endTime: DateTime.fromISO(`${this.currentYear}-10-23`)\n          },\n          {\n            name: 'Testitem 1',\n            startTime: DateTime.fromISO(`${this.currentYear}-10-11`),\n            endTime: DateTime.fromISO(`${this.currentYear}-11-02`)\n          }].sort((a, b) => a.startTime.diff(b.startTime).as('seconds')),\n        () => console.log('clicked')\n      ),\n      new Group(\n        'Testgroup 4',\n        [\n          {\n            name: 'Testitem 0',\n            startTime: DateTime.fromISO(`${this.currentYear}-02-12`),\n            endTime: DateTime.fromISO(`${this.currentYear}-05-23`)\n          },\n          {\n            name: 'Testitem 1',\n            startTime: DateTime.fromISO(`${this.currentYear}-12-11`),\n            endTime: DateTime.fromISO(`${this.currentYear + 1}-03-02`)\n          }].sort((a, b) => a.startTime.diff(b.startTime).as('seconds')),\n        () => console.log('clicked')\n      ),\n      new Group(\n        'Testgroup 5',\n        [\n          {\n            name: 'Testitem 0',\n            startTime: DateTime.fromISO(`${this.currentYear}-03-12`),\n            endTime: DateTime.fromISO(`${this.currentYear}-03-23`)\n          },\n          {\n            name: 'Testitem 1',\n            startTime: DateTime.fromISO(`${this.currentYear}-03-11`),\n            endTime: DateTime.fromISO(`${this.currentYear}-04-02`)\n          },\n          {\n            name: 'Testitem 2',\n            startTime: DateTime.fromISO(`${this.currentYear}-04-01`),\n            endTime: DateTime.fromISO(`${this.currentYear}-04-04`)\n          }].sort((a, b) => a.startTime.diff(b.startTime).as('seconds')),\n        () => console.log('clicked')\n      ),\n      new Group(\n        'Testgroup 6',\n        [\n          {\n            name: 'Testitem 0',\n            startTime: DateTime.fromISO(`${this.currentYear}-06-12`),\n            endTime: DateTime.fromISO(`${this.currentYear}-07-23`),\n            class: 'type-c'\n          },\n          {\n            name: 'Testitem 1',\n            startTime: DateTime.fromISO(`${this.currentYear - 1}-08-11`),\n            endTime: DateTime.fromISO(`${this.currentYear}-09-02`),\n            class: 'type-a'\n          }].sort((a, b) => a.startTime.diff(b.startTime).as('seconds')),\n        () => console.log('clicked')\n      ),\n      new Group(\n        'Testgroup 7',\n        [\n          {\n            name: 'Testitem 0',\n            startTime: DateTime.fromISO(`${this.currentYear - 1}-09-12`),\n            endTime: DateTime.fromISO(`${this.currentYear - 1}-10-23`),\n            class: 'my-class-a'\n          },\n          {\n            name: 'Testitem 1',\n            startTime: DateTime.fromISO(`${this.currentYear - 2}-10-11`),\n            endTime: DateTime.fromISO(`${this.currentYear - 1}-11-02`),\n            class: 'my-class-a'\n          }].sort((a, b) => a.startTime.diff(b.startTime).as('seconds')),\n        () => console.log('clicked')\n      ),\n      new Group(\n        'Testgroup 8',\n        [\n          {\n            name: 'Testitem 0',\n            startTime: DateTime.fromISO(`${this.currentYear}-02-12`),\n            endTime: DateTime.fromISO(`${this.currentYear}-04-23`)\n          },\n          {\n            name: 'Testitem 1',\n            startTime: DateTime.fromISO(`${this.currentYear}-05-11`),\n            endTime: DateTime.fromISO(`${this.currentYear}-06-02`)\n          }].sort((a, b) => a.startTime.diff(b.startTime).as('seconds')),\n        () => console.log('clicked')\n      ),\n      new Group(\n        'Testgroup 9',\n        [\n          {\n            name: 'Testitem 0',\n            startTime: DateTime.fromISO(`${this.currentYear}-02-12`),\n            endTime: DateTime.fromISO(`${this.currentYear}-05-23`),\n            dates: [\n              DateTime.fromISO(`${this.currentYear}-04-11`),\n              DateTime.fromISO(`${this.currentYear}-04-12`)\n            ]\n          },\n          {\n            name: 'Testitem 1',\n            startTime: DateTime.fromISO(`${this.currentYear}-04-11`),\n            endTime: DateTime.fromISO(`${this.currentYear}-05-02`)\n          }].sort((a, b) => a.startTime.diff(b.startTime).as('seconds')),\n        () => console.log('clicked')\n      ),\n      new Group(\n        'Testgroup 10',\n        [\n          {\n            name: 'Testitem 0',\n            startTime: DateTime.fromISO(`${this.currentYear}-06-12`),\n            endTime: DateTime.fromISO(`${this.currentYear}-07-23`),\n            hideDateRangeInHeader: true,\n            class: 'type-a',\n            dates: [\n              DateTime.fromISO(`${this.currentYear}-06-18`),\n              DateTime.fromISO(`${this.currentYear}-06-19`),\n              DateTime.fromISO(`${this.currentYear}-06-23`),\n              DateTime.fromISO(`${this.currentYear}-06-24`)\n            ]\n          },\n          {\n            name: 'Testitem 1',\n            startTime: DateTime.fromISO(`${this.currentYear - 1}-08-11`),\n            endTime: DateTime.fromISO(`${this.currentYear}-06-02`),\n            class: 'type-a'\n          }].sort((a, b) => a.startTime.diff(b.startTime).as('seconds')),\n        () => console.log('clicked')\n      ),\n      new Group(\n        'Testgroup 11',\n        [\n          {\n            name: 'Testitem 0',\n            startTime: DateTime.fromISO(`${this.currentYear}-09-12`),\n            endTime: DateTime.fromISO(`${this.currentYear + 1}-01-23`)\n          },\n          {\n            name: 'Testitem 1',\n            startTime: DateTime.fromISO(`${this.currentYear - 1}-10-11`),\n            endTime: DateTime.fromISO(`${this.currentYear}-11-02`)\n          }].sort((a, b) => a.startTime.diff(b.startTime).as('seconds')),\n        () => console.log('clicked')\n      ),\n      new Group(\n        'Testgroup 12',\n        [\n          {\n            name: 'Testitem 1',\n            startTime: DateTime.fromISO(`${this.currentYear - 1}-09-01T20:30:00`),\n            endTime: DateTime.fromISO(`${this.currentYear + 1}-12-12T04:30:00`),\n          }].sort((a, b) => a.startTime.diff(b.startTime).as('seconds')),\n        () => console.log('clicked')\n      ),\n      new Group(\n        'Testgroup 13',\n        [\n          {\n            name: 'Testitem 1',\n            startTime: DateTime.fromISO(`${this.currentYear - 1}-09-01T20:30:00`),\n            endTime: DateTime.fromISO(`${this.currentYear - 1}-12-12T04:30:00`),\n          },\n          {\n            name: 'Testitem 2',\n            startTime: DateTime.fromISO(`${this.currentYear}-09-01T20:30:00`),\n            endTime: DateTime.fromISO(`${this.currentYear}-12-12T04:30:00`),\n          },\n          {\n            name: 'Testitem 3',\n            startTime: DateTime.fromISO(`${this.currentYear + 1}-09-01T20:30:00`),\n            endTime: DateTime.fromISO(`${this.currentYear + 1}-12-12T04:30:00`),\n          }].sort((a, b) => a.startTime.diff(b.startTime).as('seconds')),\n        () => console.log('clicked')\n      ),\n    ];\n  }\n\n  setStartDate(value: string) {\n    this.startDate = (!!value && value.length > 0) ? DateTime.fromISO((value)) : null;\n  }\n\n  setEndDate(value: string) {\n    this.endDate = (!!value && value.length > 0) ? DateTime.fromISO((value)) : null;\n  }\n}\n","<!--The content below is only a placeholder and can be replaced.-->\n<div class=\"content\">\n  <div style=\"text-align:center\">\n    <h1>\n      Welcome to {{ title }}!\n    </h1>\n  </div>\n  <div class=\"calendar-showcase\">\n    <h1>Calendar with year selector</h1>\n    <ng-time-chart [groups]=\"groups\" [layoutStrategy]=\"tiledLayoutStrategy\">\n    </ng-time-chart>\n  </div>\n    <div class=\"calendar-showcase\" style=\"margin-top: 100px\">\n      <h1>Calendar with dynamic length</h1>\n      <div class=\"date-input\">\n        <label for=\"start-date\">Start date:</label>\n        <input #start_date type=\"date\"\n               id=\"start-date\"\n               name=\"start-date\"\n               (blur)=\"setStartDate(start_date.value)\"\n               value=\"2020-05-01\">\n      </div>\n      <div class=\"date-input\">\n        <label for=\"end-date\">End date:</label>\n        <input #end_date type=\"date\"\n               id=\"end-date\"\n               name=\"end-date\"\n               (blur)=\"setEndDate(end_date.value)\"\n               value=\"2020-08-31\">\n      </div>\n      <ng-time-chart [groups]=\"groups\" [startDate]=\"startDate\" [endDate]=\"endDate\"\n                     [layoutStrategy]=\"stackedLayoutStrategy\">\n      </ng-time-chart>\n    </div>\n</div>\n<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NgTimeChartModule } from '../../../ng-time-chart/src/lib/components/ng-time-chart.module';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    NgTimeChartModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import {AfterViewInit, ChangeDetectionStrategy, Component, EventEmitter, Input, Output, ViewChild} from '@angular/core';\nimport {filter, map} from 'rxjs/operators';\nimport {Period} from '../../period';\nimport {BehaviorSubject, combineLatest, Observable, Subject} from 'rxjs';\nimport {Group} from '../../group';\nimport {Constants} from '../../constants';\nimport {LayoutStrategy} from '../../layout/layout-strategy.enum';\nimport {PeriodService} from '../../service/period.service';\nimport {YearService} from '../../service/year.service';\nimport { DateTime } from 'luxon';\n\n\n@Component({\n  selector: 'ng-time-chart',\n  templateUrl: './ng-time-chart.component.html',\n  styleUrls: ['./ng-time-chart.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    PeriodService,\n    YearService]\n})\nexport class NgTimeChartComponent implements AfterViewInit {\n\n  private readonly _groups$: Subject<Group[]>;\n\n  @Input()\n  set groups(value: Group[]) {\n    this._groups$.next(value);\n  }\n\n  readonly filteredGroups$: Observable<Group[]>;\n  readonly currentPeriod$: Observable<Period>;\n\n  @Input()\n  set startDate(date: DateTime) {\n    this.periodService.startDate = date;\n  }\n\n  get startDate(): DateTime {\n    return this.periodService.startDate;\n  }\n\n  @Input()\n  set endDate(date: DateTime) {\n    this.periodService.endDate = date;\n  }\n\n  get endDate(): DateTime {\n    return this.periodService.endDate;\n  }\n\n  get currentYear$(): Observable<number> {\n    return this.yearService.year$;\n  }\n\n  @Input()\n  layoutStrategy: LayoutStrategy;\n\n  @Output()\n  readonly yearChange: EventEmitter<number>;\n\n  @ViewChild('todayMarker') todayMarker;\n\n  readonly months$: Observable<Period[]>;\n  readonly weeks$: Observable<Period[]>;\n  readonly days$: Observable<DateTime[]>;\n  readonly durationInDays$: Observable<number>;\n  readonly precedingPeriodDaysBeforeFirstWeek$: Observable<number>;\n  readonly today: DateTime;\n\n  readonly DAY_WIDTH = Constants.DAY_WIDTH;\n\n  constructor(public periodService: PeriodService,\n              public yearService: YearService) {\n    this.yearChange = new EventEmitter<number>();\n    this.yearService.year$.subscribe(year => this.yearChange.emit(year));\n    this._groups$ = new BehaviorSubject<Group[]>([]);\n    this.today = DateTime.local().set({ hour: 12 })\n    this.currentPeriod$ = combineLatest([this.periodService.period$, this.yearService.period$])\n      .pipe(map(([period, year]) => period != null ? period : year),\n        filter(period => period.isValid()));\n\n    this.months$ = this.currentPeriod$.pipe(map(period => NgTimeChartComponent.enumerateMonths(period)));\n    this.weeks$ = this.currentPeriod$.pipe(map(period => NgTimeChartComponent.enumerateWeeks(period)));\n    this.days$ = this.currentPeriod$.pipe(map(period => NgTimeChartComponent.enumerateDays(period)));\n    this.durationInDays$ = this.days$.pipe(map(days => days.length));\n    this.precedingPeriodDaysBeforeFirstWeek$ = this.currentPeriod$.pipe(\n      map(period => NgTimeChartComponent.getOldPeriodDaysBeforeFirstWeek(period))\n    );\n\n    this.filteredGroups$ = combineLatest([this.currentPeriod$, this._groups$])\n      .pipe(map(([period, groups]) => groups.filter(group => period.overlaps(group.duration))));\n  }\n\n\n  private static getOldPeriodDaysBeforeFirstWeek(period: Period): number {\n    if (!period.isValid()) {\n      return 0;\n    }\n    if (period.startDate.weekday <= 4) {\n      return 0;\n    }\n    const weekStart = period.startDate.set({}).set(({ weekday: 1 }));\n    if (!period.containsDate(weekStart)) {\n      weekStart.plus({ week: 1 })\n    }\n    const difference = Math.ceil(weekStart.diff(period.startDate, 'days').as('days'));\n    return difference > 0 ? difference : 0;\n  }\n\n  static enumerateMonths(period: Period): Period[] {\n    if (!period) {\n      return null;\n    }\n\n    function getMonthWithinPeriod(dayInMonth: DateTime): Period {\n      const fullMonth = new Period(dayInMonth.set({}).startOf('month'), dayInMonth.set({}).endOf('month'));\n      return fullMonth.intersect(myPeriod);\n    }\n\n    function enumerateWithinPeriod(startDate: DateTime): Period[] {\n      const months = [];\n      let current = startDate.set({});\n      while (myPeriod.containsDate(current)) {\n        months.push(getMonthWithinPeriod(current));\n        current = current.set({}).plus({ month: 1 });\n      }\n      return months;\n    }\n\n\n    const myPeriod = new Period(period.startDate.set({}).set({ hour: 0 }), period.endDate.set({}).set({ hour: 23 }));\n    return enumerateWithinPeriod(period.startDate.set({}));\n  }\n\n  static enumerateWeeks(period: Period): Period[] {\n    function enumerate(currentDate: DateTime, expanded: Period[]): Period[] {\n      if (Period.isSameOrBeforeDay(currentDate,period.endDate)) {\n        const endDate = currentDate.set({}).endOf('week');\n        const startDate = currentDate.set({}).startOf('week');\n        const week = new Period(startDate, endDate);\n        expanded.push(period.intersect(week));\n        const advanceDate = currentDate.set({}).plus({ week: 1 });\n        enumerate(advanceDate, expanded);\n      }\n      return expanded;\n    }\n\n    function firstWeekInPeriod(): DateTime {\n      const date = period?.startDate.set({}).set({ weekday: 4 })\n      return period.containsDate(date) ? date : date.plus({ week: 1 });\n    }\n\n    return !period ? null : enumerate(firstWeekInPeriod(), []);\n  }\n\n  static enumerateDays(period: Period): DateTime[] {\n    function enumerate(currentDate: DateTime, expanded: DateTime[]) {\n      if (Period.isSameOrBeforeDay(currentDate,period.endDate)) {\n        expanded.push(currentDate);\n        const advanceDate = currentDate.set({}).plus({ days: 1 });\n        enumerate(advanceDate, expanded);\n      }\n      return expanded;\n    }\n\n    return !period ? null : enumerate(period.startDate.set({}), []);\n  }\n\n  ngAfterViewInit() {\n    this.scrollTodayIntoView();\n  }\n\n  isToday(day: DateTime): boolean {\n    return Period.isSameDay(this.today,day);\n  }\n\n  changeYear(year: number) {\n    this.yearService.year = year;\n  }\n\n  showYearSpinner$(): Observable<boolean> {\n    return this.periodService.isFullYear$;\n  }\n\n  private scrollTodayIntoView() {\n    if (!!this.todayMarker) {\n      this.todayMarker.nativeElement.scrollIntoView({behavior: 'smooth', block: 'nearest', inline: 'center'});\n    }\n  }\n}\n","<div class=\"timetable\">\n  <div class=\"timetable-header\"\n       [style.width.px]=\"(durationInDays$ | async) * DAY_WIDTH\">\n    <div class=\"year-selector label-bar\">\n      <div *ngIf=\"(showYearSpinner$() | async) && (currentYear$ | async) as currentYear\">\n        <h3 style=\"display: inline-block; cursor: pointer\" (click)=\"changeYear(currentYear -1)\">&lt; </h3>\n        <h1 style=\"display: inline-block\">{{currentYear}}</h1>\n        <h3 style=\"display: inline-block; cursor: pointer\" (click)=\"changeYear(currentYear + 1)\"> &gt;</h3>\n      </div>\n    </div>\n    <div class=\"calendar-header\"\n         [style.width.px]=\"(durationInDays$ | async) * DAY_WIDTH\">\n      <div class=\"months\">\n        <div *ngFor=\"let month of months$ | async\"\n             [style.width.px]=\"month.days * DAY_WIDTH\"\n             [style.max-width.px]=\"month.days * DAY_WIDTH\"\n             class=\"month\">\n          {{month.startDate.toFormat('MMMM yyyy')}}\n        </div>\n      </div>\n      <div class=\"week-bar\">\n        <div class=\"weeks\">\n          <div class=\"week-offset\"\n               *ngIf=\"(precedingPeriodDaysBeforeFirstWeek$ |async)>0\"\n               [style.width.px]=\"(precedingPeriodDaysBeforeFirstWeek$ | async) * DAY_WIDTH\"></div>\n          <div class=\"week\"\n               *ngFor=\"let week of weeks$ | async\"\n               [style.width.px]=\"week.days * DAY_WIDTH\">({{week.startDate.weekNumber}}\n            ){{week.startDate.startOf('week').toFormat('L')}}</div>\n        </div>\n      </div>\n      <div class=\"days\">\n        <ng-container *ngFor=\"let day of days$ | async\">\n          <div class=\"day today\" *ngIf=\"isToday(day); else normalDay\" [ngClass]=\"{'today': isToday(day)}\" #todayMarker>\n            {{day.toFormat('dd')}}\n          </div>\n          <ng-template #normalDay>\n            <div class=\"day\">\n              {{day.toFormat('dd')}}\n            </div>\n          </ng-template>\n        </ng-container>\n      </div>\n    </div>\n  </div>\n  <ng-time-table-body [groups]=\"filteredGroups$ | async\"\n                      [today]=\"today\"\n                      [period]=\"currentPeriod$ | async\"\n                      [durationInDays]=\"durationInDays$ | async\"\n                      [layoutStrategy]=\"layoutStrategy\"></ng-time-table-body>\n</div>\n","import {Component, Input} from '@angular/core';\nimport {Period} from '../../period';\nimport {Item} from '../../item';\nimport { DateTime } from 'luxon';\n\n@Component({\n  selector: 'ng-item-grouping',\n  templateUrl: './item-grouping.component.html',\n  styleUrls: ['./item-grouping.component.scss']\n})\nexport class ItemGroupingComponent {\n\n  @Input()\n  period: Period;\n\n  @Input()\n  itemGrouping: Item[];\n\n  constructor() {\n  }\n\n  isInPeriod(time: DateTime): boolean {\n    return this.period.containsDate(time);\n  }\n\n  open(item: Item) {\n    item.onClick?.apply(null);\n  }\n\n  visibleInPeriod(itemGrouping: Item[]) {\n    if (!itemGrouping || itemGrouping.length === 0) {\n      return false;\n    }\n    const earliestDate = DateTime.min(...itemGrouping.map(item => item.startTime));\n    const latestDate = DateTime.max(...itemGrouping.map(item => item.endTime));\n    const groupingPeriod = new Period(earliestDate, latestDate);\n    return this.isInPeriod(earliestDate) ||\n      this.isInPeriod(latestDate) ||\n      groupingPeriod.containsDate(this.period.startDate);\n  }\n}\n","<div class=\"item-grouping\" *ngIf=\"visibleInPeriod(itemGrouping)\">\n  <div class=\"items\">\n    <ng-container *ngFor=\"let item of itemGrouping\">\n      <ng-item [period]=\"period\" [item]=\"item\"></ng-item>\n    </ng-container>\n  </div>\n</div>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {Item} from '../../item';\nimport {Constants} from '../../constants';\nimport {Period} from '../../period';\nimport { DateTime } from 'luxon';\n\n@Component({\n  selector: 'ng-item',\n  templateUrl: './item.component.html',\n  styleUrls: ['./item.component.scss']\n})\nexport class ItemComponent implements OnInit {\n\n  readonly DAY_WIDTH = Constants.DAY_WIDTH;\n  readonly SIDEBAR_WIDTH = Constants.SIDEBAR_WIDTH;\n\n  @Input()\n  period: Period;\n\n  @Input()\n  item: Item;\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n\n  isVisible(item: Item) {\n    return this.isInPeriod(item.startTime) ||\n      this.isInPeriod(item.endTime) ||\n      new Period(item.startTime, item.endTime).containsDate(this.period.startDate);\n  }\n\n  isInPeriod(time: DateTime): boolean {\n    return this.period.containsDate(time);\n  }\n\n  getDayOfPeriod(date: DateTime): number {\n    if (!this.period.containsDate(date)) {\n      return 0;\n    }\n    return Math.floor(date.diff(this.period.startDate, 'days').as('days'));\n  }\n\n  getDuration(item: Item): number {\n    const startDate = this.getStartDateInCurrentPeriod(item.startTime).startOf('day');\n    const endDate = this.getEndDateCurrentPeriod(item.endTime).endOf('day');\n    return Math.ceil(endDate.diff(startDate, 'days').as('days'));\n  }\n\n  isNotInPeriod(time: DateTime): boolean {\n    return !this.period.containsDate(time);\n  }\n\n  getDaysSince(referenceDate: string | DateTime, date: string | DateTime): number {\n    let referenceDT: DateTime;\n    if(referenceDate instanceof DateTime){\n      referenceDT=referenceDate.set({});\n    }else{\n      referenceDT = DateTime.fromISO(referenceDate);;\n    }\n    referenceDT=this.getStartDateInCurrentPeriod(referenceDT).startOf('day');\n\n\n    let myDT: DateTime;\n    if(myDT instanceof DateTime){\n      myDT=date.set({});\n    }else{\n      myDT = DateTime.fromISO(date);;\n    }\n    myDT=this.getStartDateInCurrentPeriod(myDT).startOf('day');\n\n    return Math.ceil(myDT.diff(referenceDT, 'days').as('days'));\n  }\n\n\n  open(item: Item) {\n    item.onClick?.apply(null);\n  }\n\n  private getStartDateInCurrentPeriod(startDate: DateTime): DateTime {\n    if (Period.isBefore(startDate,this.period.startDate)) {\n      return this.period.startDate;\n    }\n    return startDate;\n  }\n\n  private getEndDateCurrentPeriod(endDate: DateTime): DateTime {\n    if (Period.isAfter(endDate,this.period.endDate)) {\n      return this.period.endDate;\n    }\n    return endDate;\n  }\n\n}\n","<div class=\"item {{item.class}}\"\n     *ngIf=\"isVisible(item)\"\n     [style.left.px]=\"(getDayOfPeriod(item.startTime) * DAY_WIDTH + SIDEBAR_WIDTH)\"\n     [style.minWidth.px]=\"(getDuration(item) * DAY_WIDTH)\"\n     [style.maxWidth.px]=\"(getDuration(item) * DAY_WIDTH)\"\n     [class.open-left]=\"isNotInPeriod(item.startTime)\"\n     [class.open-right]=\"isNotInPeriod(item.endTime)\"\n     (click)=\"open(item)\">\n  <ng-container *ngFor=\"let day of item.dates\">\n    <div class=\"blockade-day day-width-1\"\n         *ngIf=\"isInPeriod(day)\"\n         [style.left.px]=\"getDaysSince(item.startTime, day) * DAY_WIDTH\">\n      &nbsp;\n    </div>\n  </ng-container>\n  <div class=\"blockade-title\">\n    {{item.name}}\n    <ng-container *ngIf=\"!item.hideDateRangeInHeader\">\n      ({{item.startTime | timeChartDateFormatter}} - {{item.endTime | timeChartDateFormatter}})\n    </ng-container>\n  </div>\n  <div *ngIf=\"item.details\" class=\"blockade-details\">\n    <p>{{item.details}}</p>\n  </div>\n</div>\n","import {NgModule} from '@angular/core';\nimport {NgTimeChartComponent} from './chart/ng-time-chart.component';\nimport {CommonModule} from '@angular/common';\nimport {TimeTableBodyComponent} from './time-table-body/time-table-body.component';\nimport {ItemGroupingComponent} from './item-grouping/item-grouping.component';\nimport {TimeChartDateFormatterPipe} from '../pipes/time-chart-date-formatter.pipe';\nimport {ItemComponent} from './item/item.component';\n\n@NgModule({\n  declarations: [\n    TimeTableBodyComponent,\n    ItemGroupingComponent,\n    TimeChartDateFormatterPipe,\n    ItemComponent,\n    NgTimeChartComponent\n  ],\n  imports: [\n    CommonModule,\n  ],\n  exports: [\n    ItemComponent,\n    TimeTableBodyComponent,\n    ItemGroupingComponent,\n    NgTimeChartComponent\n  ]\n})\nexport class NgTimeChartModule {\n}\n","import {Component, Input, ViewChild} from '@angular/core';\nimport {Constants} from '../../constants';\nimport {Group} from '../../group';\nimport {Item} from '../../item';\nimport {Period} from '../../period';\nimport {LayoutSelectorService} from '../../layout/layout-selector.service';\nimport {LayoutStrategy} from '../../layout/layout-strategy.enum';\nimport {DateTime} from 'luxon';\n\n@Component({\n  selector: 'ng-time-table-body',\n  templateUrl: './time-table-body.component.html',\n  styleUrls: ['./time-table-body.component.scss']\n})\nexport class TimeTableBodyComponent {\n\n  readonly DAY_WIDTH = Constants.DAY_WIDTH;\n  readonly SIDEBAR_WIDTH = Constants.SIDEBAR_WIDTH;\n\n  @Input()\n  groups: Group[];\n\n  @Input()\n  period: Period;\n\n  @Input()\n  today: DateTime;\n\n  @Input()\n  durationInDays: number;\n\n  @Input()\n  layoutStrategy: LayoutStrategy;\n\n  @ViewChild('todaymarker') todayMarker;\n\n\n  constructor(readonly layoutSelectorService: LayoutSelectorService) {\n    this.groups = [];\n  }\n\n  doLayout(items: Item[]): Item[][] {\n    return this.layoutSelectorService.doLayout(items, this.layoutStrategy);\n  }\n\n  getDayOfPeriod(date: DateTime): number {\n    if (!this.period.containsDate(date)) {\n      return 0;\n    }\n    return Math.round(date.diff(this.period.startDate, 'days').as('days')) - 1;\n  }\n\n  isInPeriod(time: DateTime): boolean {\n    if (this.period) {\n      return this.period.containsDate(time);\n    } else {\n      return false;\n    }\n  }\n\n\n  open(group: Group) {\n    group.onClick?.apply(null);\n  }\n}\n","<div class=\"timetable-body\"\n     [style.minWidth.px]=\"durationInDays * DAY_WIDTH + SIDEBAR_WIDTH\">\n  <div class=\"item-group\"\n       *ngFor=\"let group of groups\">\n    <div class=\"item-label label-bar\" (click)=\"open(group)\">\n      {{group.name}}\n    </div>\n    <div class=\"item-display\">\n      <ng-container *ngFor=\"let itemGrouping of doLayout(group.items)\">\n        <ng-item-grouping [itemGrouping]=\"itemGrouping\" [period]=\"period\"></ng-item-grouping>\n      </ng-container>\n    </div>\n  </div>\n  <div class=\"today-marker\"\n       *ngIf=\"isInPeriod(this.today)\"\n       [style.left.px]=\"(getDayOfPeriod(this.today) * DAY_WIDTH) + SIDEBAR_WIDTH + 7\"></div>\n</div>\n","export class Constants {\n  public static readonly DAY_WIDTH = 20;\n  public static readonly SIDEBAR_WIDTH = 200;\n}\n","import {Item} from './item';\nimport {Period} from './period';\nimport { DateTime } from 'luxon';\n\nexport class Group {\n  readonly name: string;\n  readonly items: Item[];\n  readonly duration?: Period;\n  onClick?: () => void;\n\n  public constructor(name: string, items: Item[], onClick = () => {\n  }) {\n    this.name = name;\n    this.items = items;\n    this.duration = Group.calculateDuration(items);\n    this.onClick = onClick;\n  }\n\n  private static calculateDuration(items: Item[]) {\n    const startDate = DateTime.min(...items.map(item => item.startTime));\n    const endDate = DateTime.max(...items.map(item => item.endTime));\n    if (!startDate || !endDate) {\n      return null;\n    }\n    return new Period(startDate, endDate);\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {StackedLayoutService} from './stacked-layout.service';\nimport {TiledLayoutService} from './tiled-layout.service';\nimport {Item} from '../item';\nimport {LayoutStrategy} from './layout-strategy.enum';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LayoutSelectorService {\n\n  constructor(private readonly stackedLayout: StackedLayoutService,\n              private readonly tiledLayout: TiledLayoutService) {\n  }\n\n  /**\n   * Does the layout of the an {@link Item} list using the selected strategy\n   * @param items The Items to lay out\n   * @param strategy The {@link LayoutStrategy} to use to layout the items\n   */\n  public doLayout(items: Item[], strategy: LayoutStrategy = LayoutStrategy.Stacked): Item[][] {\n    switch (strategy) {\n      case LayoutStrategy.Stacked:\n        return this.stackedLayout.doLayout(items);\n      case LayoutStrategy.Tiled:\n        return this.tiledLayout.doLayout(items);\n\n    }\n  }\n\n}\n","export enum LayoutStrategy {\n  /**\n   * Stack items one on top of the other\n   */\n  Stacked = 0,\n  /**\n   * Try to tile items if their start and end dates do not overlap\n   */\n  Tiled = 1\n}\n","import {Injectable} from '@angular/core';\nimport {LayoutService} from './layout.service';\nimport {Item} from '../item';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StackedLayoutService implements LayoutService {\n\n  constructor() {\n  }\n\n  doLayout(items: Item[]): Item[][] {\n    return items.map(item => [item]);\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {LayoutService} from './layout.service';\nimport {Item} from '../item';\nimport { DateTime } from 'luxon';\nimport {Period} from '../period';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TiledLayoutService implements LayoutService {\n\n  constructor() {\n  }\n\n  /**\n   * Tries to layout items in the most compact way\n   * @param items The {@link Item}s to lay out.\n   */\n  public doLayout(items: Item[]): Item[][] {\n    const itemOrder = new ItemOrder();\n    const sorted = items.sort((a, b) => a.startTime.diff(b.startTime));\n    sorted.forEach(item => itemOrder.add(item));\n    return itemOrder.queues;\n  }\n}\n\nclass ItemOrder {\n\n  get queues(): Item[][] {\n    return this._queues;\n  }\n\n  constructor() {\n    this._queues = [];\n  }\n  private readonly _queues: Item[][];\n\n  private static getStartDate(item: Item): DateTime {\n    return item.startTime.set({}).startOf('day');\n  }\n\n  private static getEndDate(item: Item): DateTime {\n    return item.endTime.set({}).endOf('day');\n  }\n\n  add(item: Item) {\n    this.getFreeQueue(ItemOrder.getStartDate(item)).push(item);\n\n  }\n\n  private getFreeQueue(date: DateTime): Item[] {\n    if (this._queues.length === 0) {\n      return this.createNewSubQueue();\n    }\n\n    const queuesWithFreeSpace = this._queues.filter(queue => Period.isBefore(ItemOrder.getEndDate(queue[queue.length - 1]),date));\n    if (queuesWithFreeSpace.length > 0) {\n      return queuesWithFreeSpace[0];\n    }\n\n    return this.createNewSubQueue();\n  }\n\n  private createNewSubQueue(): Item[] {\n    const myQueue: Item[] = [];\n    this._queues.push(myQueue);\n    return myQueue;\n  }\n\n}\n","import { DateTime } from 'luxon';\nexport class Period {\n\n  private readonly _startDate: DateTime;\n  private readonly _endDate: DateTime;\n\n  private static splitAtNewYear(period: Period): Period[] {\n    const periods: Period[] = [];\n    if (period.endDate.year > period.startDate.year) {\n      periods.push(new Period(period.startDate.set({}), DateTime.fromISO(`${period.startDate.year}-12-31`)));\n      periods.push(...Period.splitAtNewYear(new Period(DateTime.fromISO(`${period.endDate.year}-01-01`), period.endDate.set({}))));\n    } else {\n      periods.push(period);\n    }\n    return periods;\n  }\n\n  constructor(startDate: DateTime, endDate: DateTime) {\n    this._startDate = startDate?.set({});\n    this._endDate = endDate?.set({});\n  }\n\n  static forYear(year: number): Period {\n    const midYear = DateTime.fromISO(`${year}-06-01`);\n    return new Period(midYear.set({}).startOf('year'), midYear.set({}).endOf('year'));\n  }\n\n  get startDate(): DateTime {\n    return this._startDate;\n  }\n\n  get endDate(): DateTime {\n    return this._endDate;\n  }\n\n  get days(): number {\n    return Math.ceil(this.endDate.diff(this.startDate, 'days').as('days'));\n  }\n\n  get isoWeeks(): number {\n\n    function countThursdays(period: Period) {\n      let count = 0;\n      let startDay = period.startDate.set({}).set({ weekday: 4 });\n      if (Period.isBefore(startDay,period.startDate)) {\n        startDay=startDay.plus({ days: 7 });\n      }\n      if (period.days >= 4) {\n        while (Period.isSameOrBeforeDay(startDay,period.endDate)) {\n          count++;\n          startDay=startDay.plus({ days: 7 });\n        }\n      }\n      return count;\n    }\n\n    const periods = Period.splitAtNewYear(this);\n    return periods.map(p => countThursdays(p))\n      .reduceRight((previousValue, currentValue) => previousValue + currentValue);\n  }\n\n  public isValid(): boolean {\n    if(this._endDate instanceof DateTime && this._startDate instanceof DateTime){\n      return !!this._startDate && !!this._endDate && this._startDate.toMillis() < this._endDate.toMillis()\n    }else{\n      return false;\n    }\n  }\n\n  public containsDate(date: DateTime): boolean {\n    return Period.isSameOrAfter(date,this.startDate) && Period.isSameOrBefore(date,this.endDate);\n  }\n\n  public toString() {\n    return `Period (${this.startDate} - ${this.endDate})`;\n  }\n\n  public overlaps(period: Period): boolean {\n    return !!this.intersect(period);\n  }\n\n  intersect(period: Period): Period {\n    const latestStart = DateTime.max(this.startDate, period.startDate);\n    const earliestEnd = DateTime.min(this.endDate, period.endDate);\n    if (!latestStart || !earliestEnd) {\n      return null;\n    }\n    if (Period.isAfter(latestStart,earliestEnd)) {\n      return null;\n    }\n    return new Period(latestStart, earliestEnd);\n  }\n\n  public equals(period: Period) {\n    return Period.isSame(this.startDate,period.startDate) && Period.isSame(this.endDate,period.endDate)\n  }\n\n\n  public static isSameDay(first:DateTime,second:DateTime):boolean{\n    return DateTime.fromISO(first.toISODate()).toMillis()==DateTime.fromISO(second.toISODate()).toMillis();\n  }\n  public static isSameOrBeforeDay(first:DateTime,second:DateTime):boolean{\n    return DateTime.fromISO(first.toISODate()).toMillis()<=DateTime.fromISO(second.toISODate()).toMillis();\n  }\n  public static isSameOrBefore(first:DateTime,second:DateTime):boolean{\n    return first.toMillis()<=second.toMillis();\n  }\n  public static isSameOrAfter(first:DateTime,second:DateTime):boolean{\n    return first.toMillis()>=second.toMillis();\n  }\n  public static isSame(first:DateTime,second:DateTime):boolean{\n    return first.toMillis()==second.toMillis();\n  }\n  public static isBefore(first:DateTime,second:DateTime):boolean{\n    return first.toMillis()<second.toMillis();\n  }\n  public static isAfter(first:DateTime,second:DateTime):boolean{\n    return first.toMillis()>second.toMillis();\n  }\n}\n","import {Pipe, PipeTransform} from '@angular/core';\nimport { DateTime } from 'luxon';\n\n@Pipe({\n  name: 'timeChartDateFormatter'\n})\n\nexport class TimeChartDateFormatterPipe implements PipeTransform {\n\n  transform(dateString: (string | DateTime)): any {\n    if(dateString instanceof DateTime){\n      return dateString.toFormat('dd. MM.');\n    }else{\n      return DateTime.fromISO(dateString).toFormat('dd. MM.');\n    }\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {BehaviorSubject, combineLatest, Observable, Subject} from 'rxjs';\nimport {Period} from '../period';\nimport {map} from 'rxjs/operators';\nimport { DateTime } from 'luxon';\n\n/**\n * The service provides the current calendar period. It is specified:\n * <ul>\n *   <li>As the period between a start and end date if both are specified</li>\n *   <li>The duration of a year following the start date if no end date is specified</li>\n *   <li>The duration of a year preceding the end date if no start date is specified</li>\n *   <li>The full current year from jan 1st to dec 31 if neither start nor end date are specified</li>\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class PeriodService {\n\n  private readonly _period$: Observable<Period>;\n  private readonly _isFullYear$: Observable<boolean>;\n  private readonly _startDate$: Subject<DateTime>;\n  private readonly _endDate$: Subject<DateTime>;\n\n\n  /**\n   * Set the start date of the period. If the parameter is null the start date will be calculated\n   * @param date A luxon date or null\n   */\n  set startDate(date: DateTime) {\n    this._startDate$.next(date);\n  }\n\n  /**\n   * Set the end date of the period. If the parameter is null the end date will be  calculated.\n   * @param date A luxon date or null\n   */\n  set endDate(date: DateTime) {\n    this._endDate$.next(date);\n  }\n\n  /**\n   * The observable with the period between start- and end date or the current year if neither is passed.\n   */\n  public get period$(): Observable<Period> {\n    return this._period$;\n  }\n\n  /**\n   * Returns true if neither start nor end were given and the current year was picked instead.\n   */\n  public get isFullYear$(): Observable<boolean> {\n    return this._isFullYear$;\n  }\n\n  constructor() {\n    this._startDate$ = new BehaviorSubject(null);\n    this._endDate$ = new BehaviorSubject(null);\n    this._period$ = new BehaviorSubject(PeriodService.getCurrentYearPeriod());\n    const startAndEnd$ = combineLatest([this._startDate$, this._endDate$]);\n    this._isFullYear$ = startAndEnd$.pipe(map(([start, end]) => !start && !end));\n    this._period$ = startAndEnd$.pipe(map(([start, end]) => PeriodService.calculatePeriod(start, end)));\n  }\n\n  private static getCurrentYearPeriod() {\n    const currentYear = DateTime.local();\n    return new Period(\n      currentYear.set({}).startOf('year'),\n      currentYear.set({}).endOf('year')\n    );\n  }\n\n  private static calculatePeriod(startDate: DateTime, endDate: DateTime): Period {\n    if (startDate == null && endDate == null) {\n      return null;\n    }\n    let myStartDate;\n    if (startDate != null) {\n      myStartDate = startDate;\n    } else {\n      myStartDate = endDate.set({});\n      myStartDate=myStartDate.minus({ year: 1 });\n    }\n\n    let myEndDate;\n    if (endDate != null) {\n      myEndDate = endDate.set({});\n    } else {\n      myEndDate = myStartDate.set({});\n      myEndDate=myEndDate.plus({ year: 1 });\n    }\n    return new Period(myStartDate, myEndDate);\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {BehaviorSubject, Observable, Subject} from 'rxjs';\nimport {Period} from '../period';\nimport {map} from 'rxjs/operators';\nimport { DateTime } from 'luxon';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class YearService {\n\n  private readonly _year$: Subject<number>;\n  private readonly _period$: Observable<Period>;\n\n  set year(value: number) {\n    this._year$.next(value);\n  }\n\n  get year$(): Observable<number> {\n    return this._year$.asObservable();\n  }\n\n  get period$() {\n    return this._period$;\n  }\n\n  private static periodForYear(year: number) {\n    return Period.forYear(year);\n  }\n\n  constructor() {\n    this._year$ = new BehaviorSubject<number>( DateTime.local().year);\n    this._period$ = this._year$.pipe(map(year => YearService.periodForYear(year)));\n  }\n}\n"],"names":["EventEmitter","filter","map","Period","BehaviorSubject","combineLatest","Constants","PeriodService","YearService","DateTime","i0","ctx_r6","ctx_r8","month_r9","_r13","NgTimeChartComponent","constructor","periodService","yearService","DAY_WIDTH","yearChange","year$","subscribe","year","emit","_groups$","today","local","set","hour","currentPeriod$","period$","pipe","period","isValid","months$","enumerateMonths","weeks$","enumerateWeeks","days$","enumerateDays","durationInDays$","days","length","precedingPeriodDaysBeforeFirstWeek$","getOldPeriodDaysBeforeFirstWeek","filteredGroups$","groups","group","overlaps","duration","value","next","startDate","date","endDate","currentYear$","weekday","weekStart","containsDate","plus","week","difference","Math","ceil","diff","as","getMonthWithinPeriod","dayInMonth","fullMonth","startOf","endOf","intersect","myPeriod","enumerateWithinPeriod","months","current","push","month","enumerate","currentDate","expanded","isSameOrBeforeDay","advanceDate","firstWeekInPeriod","ngAfterViewInit","scrollTodayIntoView","isToday","day","isSameDay","changeYear","showYearSpinner$","isFullYear$","todayMarker","nativeElement","scrollIntoView","behavior","block","inline","selectors","viewQuery","decls","vars","consts","template","ctx"],"sourceRoot":"webpack:///"}